### BTest baseline data generated by btest-diff. Do not edit. Use "btest -U/-u" to update. Requires BTest >= 0.63.
[debug/compiler] parsing file "foo.hlt"
[debug/compiler] registering AST for module Foo ("<...>//foo.hlt")
[debug/compiler]   Plugin HILTI
[debug/compiler]     processing AST, round 1
[debug/compiler]       performing missing imports for module Foo
[debug/compiler]         parsing file "./bar.hlt"
[debug/compiler]         loaded module Bar from "./bar.hlt"
[debug/compiler]         registering AST for module Bar ("<...>//bar.hlt")
[debug/compiler]         updated cached AST for module Bar (final: no, requires_compilation: no, dependencies: Foo)
[debug/compiler]         updated cached AST for module Foo (final: no, requires_compilation: yes, dependencies: Bar)
[debug/compiler]       performing missing imports for module Bar
[debug/compiler]         updated cached AST for module Bar (final: no, requires_compilation: no, dependencies: Foo)
[debug/compiler]       modules: Bar, Foo
[debug/compiler]       resetting nodes for module Bar
[debug/compiler]       resetting nodes for module Foo
[debug/compiler]       building scopes for all modules
[debug/compiler]       building scopes for all modules
[debug/ast-scopes] # [HILTI] Bar: ASTs with scopes (round 1)
[debug/ast-scopes]   - Module %8 (bar.hlt:2:1-11:2) [@m:XXX]
[debug/ast-scopes]       | Bar -> declaration::Module %9 <id="Bar"> [canon-id: not set] [@d:XXX] ([@d:XXX])
[debug/ast-scopes]       | Bar1 -> declaration::Type %3 <linkage="public"> [canon-id: not set] (resolved) [@d:XXX] ([@d:XXX])
[debug/ast-scopes]       | Bar2 -> declaration::Type %4 <linkage="public"> [canon-id: not set] (not resolved) [@d:XXX] ([@d:XXX])
[debug/ast-scopes]       | Foo -> declaration::ImportedModule %2 <extension=".hlt" path="" scope="-"> [canon-id: not set] [@d:XXX] ([@d:XXX])
[debug/ast-scopes]       | bar -> declaration::Function %5 <linkage="private" parent_type="%???"> [canon-id: not set] [@d:XXX] ([@d:XXX])
[debug/ast-scopes]     - ID <name="Bar"> (bar.hlt:2:8) [@i:XXX]
[debug/ast-scopes]     - statement::Block (bar.hlt:2:1-11:2) [@s:XXX]
[debug/ast-scopes]     - declaration::ImportedModule <extension=".hlt" path="" scope="-"> (bar.hlt:4:1) [canon-id: not set] [@d:XXX]
[debug/ast-scopes]         | Bar -> declaration::ImportedModule %10 <extension=".hlt" path="" scope="-"> [canon-id: not set] [@d:XXX] ([@d:XXX])
[debug/ast-scopes]         | Foo -> declaration::Module %16 <id="Foo"> [canon-id: not set] [@d:XXX] ([@d:XXX])
[debug/ast-scopes]         | Foo1 -> declaration::Type %11 <linkage="public"> [canon-id: not set] (resolved) [@d:XXX] ([@d:XXX])
[debug/ast-scopes]         | Foo2 -> declaration::Type %12 <linkage="public"> [canon-id: not set] (not resolved) [@d:XXX] ([@d:XXX])
[debug/ast-scopes]         | foo -> declaration::Function %13 <linkage="private" parent_type="%???"> [canon-id: not set] [@d:XXX] ([@d:XXX])
[debug/ast-scopes]       - ID <name="Foo"> (bar.hlt:4:8) [@i:XXX]
[debug/ast-scopes]     - declaration::Type %3 <linkage="public"> (bar.hlt:6:1) [canon-id: not set] (resolved) [@d:XXX]
[debug/ast-scopes]       - ID <name="Bar1"> (bar.hlt:6:13) [@i:XXX]
[debug/ast-scopes]       - type::String (bar.hlt:6:20) (const) (resolved) [@t:XXX]
[debug/ast-scopes]       - node::None (foo.hlt:6:1) [@n:XXX]
[debug/ast-scopes]     - declaration::Type %4 <linkage="public"> (bar.hlt:7:1) [canon-id: not set] (not resolved) [@d:XXX]
[debug/ast-scopes]       - ID <name="Bar2"> (bar.hlt:7:13) [@i:XXX]
[debug/ast-scopes]       - type::UnresolvedID (bar.hlt:7:1) (const) (not resolved) [@t:XXX]
[debug/ast-scopes]         - ID <name="Foo::Foo1"> (bar.hlt:7:20) [@i:XXX]
[debug/ast-scopes]       - node::None (foo.hlt:6:1) [@n:XXX]
[debug/ast-scopes]     - declaration::Function %5 <linkage="private" parent_type="%???"> (bar.hlt:9:1) [canon-id: not set] [@d:XXX]
[debug/ast-scopes]         | bar -> declaration::Parameter %6 <is_type_param="false" kind="in"> [canon-id: not set] [@d:XXX] ([@d:XXX])
[debug/ast-scopes]         | foo -> declaration::Parameter %7 <is_type_param="false" kind="in"> [canon-id: not set] [@d:XXX] ([@d:XXX])
[debug/ast-scopes]       - Function <cc="<standard>"> (bar.hlt:9:8) [@f:XXX]
[debug/ast-scopes]         - ID <name="bar"> (bar.hlt:9:16) [@i:XXX]
[debug/ast-scopes]         - type::Function <flavor="standard"> (bar.hlt:9:8) (const) (not resolved) [@t:XXX]
[debug/ast-scopes]           - type::function::Result (bar.hlt:9:9) [@t:XXX]
[debug/ast-scopes]             - type::String (bar.hlt:9:9) (const) (resolved) [@t:XXX]
[debug/ast-scopes]           - node::None (foo.hlt:9:8) [@n:XXX]
[debug/ast-scopes]           - declaration::Parameter %6 <is_type_param="false" kind="in"> (bar.hlt:9:20) [canon-id: not set] [@d:XXX]
[debug/ast-scopes]             - ID <name="bar"> (bar.hlt:9:25) [@i:XXX]
[debug/ast-scopes]             - type::UnresolvedID (bar.hlt:9:20) (const) (not resolved) [@t:XXX]
[debug/ast-scopes]               - ID <name="Bar1"> (bar.hlt:9:20) [@i:XXX]
[debug/ast-scopes]             - node::None (foo.hlt:9:20) [@n:XXX]
[debug/ast-scopes]           - declaration::Parameter %7 <is_type_param="false" kind="in"> (bar.hlt:9:29) [canon-id: not set] [@d:XXX]
[debug/ast-scopes]             - ID <name="foo"> (bar.hlt:9:40) [@i:XXX]
[debug/ast-scopes]             - type::UnresolvedID (bar.hlt:9:29) (const) (not resolved) [@t:XXX]
[debug/ast-scopes]               - ID <name="Foo::Foo1"> (bar.hlt:9:30) [@i:XXX]
[debug/ast-scopes]             - node::None (foo.hlt:9:20) [@n:XXX]
[debug/ast-scopes]         - node::None (foo.hlt:9:8) [@n:XXX]
[debug/ast-scopes]         - node::None (foo.hlt:6:1) [@n:XXX]
[debug/ast-scopes] # [HILTI] Foo: ASTs with scopes (round 1)
[debug/ast-scopes]   - Module %1 (foo.hlt:2:1-11:2) [@m:XXX]
[debug/ast-scopes]       | Bar -> declaration::ImportedModule %10 <extension=".hlt" path="" scope="-"> [canon-id: not set] [@d:XXX] ([@d:XXX])
[debug/ast-scopes]       | Foo -> declaration::Module %16 <id="Foo"> [canon-id: not set] [@d:XXX] ([@d:XXX])
[debug/ast-scopes]       | Foo1 -> declaration::Type %11 <linkage="public"> [canon-id: not set] (resolved) [@d:XXX] ([@d:XXX])
[debug/ast-scopes]       | Foo2 -> declaration::Type %12 <linkage="public"> [canon-id: not set] (not resolved) [@d:XXX] ([@d:XXX])
[debug/ast-scopes]       | foo -> declaration::Function %13 <linkage="private" parent_type="%???"> [canon-id: not set] [@d:XXX] ([@d:XXX])
[debug/ast-scopes]     - ID <name="Foo"> (foo.hlt:2:8) [@i:XXX]
[debug/ast-scopes]     - statement::Block (foo.hlt:2:1-11:2) [@s:XXX]
[debug/ast-scopes]     - declaration::ImportedModule <extension=".hlt" path="" scope="-"> (foo.hlt:4:1) [canon-id: not set] [@d:XXX]
[debug/ast-scopes]         | Bar -> declaration::Module %9 <id="Bar"> [canon-id: not set] [@d:XXX] ([@d:XXX])
[debug/ast-scopes]         | Bar1 -> declaration::Type %3 <linkage="public"> [canon-id: not set] (resolved) [@d:XXX] ([@d:XXX])
[debug/ast-scopes]         | Bar2 -> declaration::Type %4 <linkage="public"> [canon-id: not set] (not resolved) [@d:XXX] ([@d:XXX])
[debug/ast-scopes]         | Foo -> declaration::ImportedModule %2 <extension=".hlt" path="" scope="-"> [canon-id: not set] [@d:XXX] ([@d:XXX])
[debug/ast-scopes]         | bar -> declaration::Function %5 <linkage="private" parent_type="%???"> [canon-id: not set] [@d:XXX] ([@d:XXX])
[debug/ast-scopes]       - ID <name="Bar"> (foo.hlt:4:8) [@i:XXX]
[debug/ast-scopes]     - declaration::Type %11 <linkage="public"> (foo.hlt:6:1) [canon-id: not set] (resolved) [@d:XXX]
[debug/ast-scopes]       - ID <name="Foo1"> (foo.hlt:6:13) [@i:XXX]
[debug/ast-scopes]       - type::Bool (foo.hlt:6:20) (const) (resolved) [@t:XXX]
[debug/ast-scopes]       - node::None (foo.hlt:6:1) [@n:XXX]
[debug/ast-scopes]     - declaration::Type %12 <linkage="public"> (foo.hlt:7:1) [canon-id: not set] (not resolved) [@d:XXX]
[debug/ast-scopes]       - ID <name="Foo2"> (foo.hlt:7:13) [@i:XXX]
[debug/ast-scopes]       - type::UnresolvedID (foo.hlt:7:1) (const) (not resolved) [@t:XXX]
[debug/ast-scopes]         - ID <name="Bar::Bar1"> (foo.hlt:7:20) [@i:XXX]
[debug/ast-scopes]       - node::None (foo.hlt:6:1) [@n:XXX]
[debug/ast-scopes]     - declaration::Function %13 <linkage="private" parent_type="%???"> (foo.hlt:9:1) [canon-id: not set] [@d:XXX]
[debug/ast-scopes]         | bar -> declaration::Parameter %15 <is_type_param="false" kind="in"> [canon-id: not set] [@d:XXX] ([@d:XXX])
[debug/ast-scopes]         | foo -> declaration::Parameter %14 <is_type_param="false" kind="in"> [canon-id: not set] [@d:XXX] ([@d:XXX])
[debug/ast-scopes]       - Function <cc="<standard>"> (foo.hlt:9:8) [@f:XXX]
[debug/ast-scopes]         - ID <name="foo"> (foo.hlt:9:16) [@i:XXX]
[debug/ast-scopes]         - type::Function <flavor="standard"> (foo.hlt:9:8) (const) (not resolved) [@t:XXX]
[debug/ast-scopes]           - type::function::Result (foo.hlt:9:9) [@t:XXX]
[debug/ast-scopes]             - type::String (foo.hlt:9:9) (const) (resolved) [@t:XXX]
[debug/ast-scopes]           - node::None (foo.hlt:9:8) [@n:XXX]
[debug/ast-scopes]           - declaration::Parameter %14 <is_type_param="false" kind="in"> (foo.hlt:9:20) [canon-id: not set] [@d:XXX]
[debug/ast-scopes]             - ID <name="foo"> (foo.hlt:9:25) [@i:XXX]
[debug/ast-scopes]             - type::UnresolvedID (foo.hlt:9:20) (const) (not resolved) [@t:XXX]
[debug/ast-scopes]               - ID <name="Foo1"> (foo.hlt:9:20) [@i:XXX]
[debug/ast-scopes]             - node::None (foo.hlt:9:20) [@n:XXX]
[debug/ast-scopes]           - declaration::Parameter %15 <is_type_param="false" kind="in"> (foo.hlt:9:29) [canon-id: not set] [@d:XXX]
[debug/ast-scopes]             - ID <name="bar"> (foo.hlt:9:40) [@i:XXX]
[debug/ast-scopes]             - type::UnresolvedID (foo.hlt:9:29) (const) (not resolved) [@t:XXX]
[debug/ast-scopes]               - ID <name="Bar::Bar1"> (foo.hlt:9:30) [@i:XXX]
[debug/ast-scopes]             - node::None (foo.hlt:9:20) [@n:XXX]
[debug/ast-scopes]         - node::None (foo.hlt:9:8) [@n:XXX]
[debug/ast-scopes]         - node::None (foo.hlt:6:1) [@n:XXX]
[debug/compiler]       normalizing nodes in module Bar
[debug/compiler]       coercing nodes in module Bar
[debug/compiler]       resolving nodes in module Bar
[debug/resolver] [hilti::declaration::Type] setting type ID to Bar::Bar1 (./bar.hlt:6:1)
[debug/resolver] [hilti::type::UnresolvedID] Foo::Foo1 -> type Foo::Foo1 (./bar.hlt:7:1)
[debug/resolver] [hilti::type::UnresolvedID] Bar1 -> type Bar::Bar1 (./bar.hlt:9:20)
[debug/resolver] [hilti::type::UnresolvedID] Foo::Foo1 -> type Foo::Foo1 (./bar.hlt:9:29)
[debug/compiler]         -> modified
[debug/compiler]       normalizing nodes in module Foo
[debug/compiler]       coercing nodes in module Foo
[debug/compiler]       resolving nodes in module Foo
[debug/resolver] [hilti::declaration::Type] setting type ID to Foo::Foo1 (foo.hlt:6:1)
[debug/resolver] [hilti::type::UnresolvedID] Bar::Bar1 -> type Bar::Bar1 (foo.hlt:7:1)
[debug/resolver] [hilti::type::UnresolvedID] Foo1 -> type Foo::Foo1 (foo.hlt:9:20)
[debug/resolver] [hilti::type::UnresolvedID] Bar::Bar1 -> type Bar::Bar1 (foo.hlt:9:29)
[debug/compiler]         -> modified
[debug/compiler]     processing AST, round 2
[debug/compiler]       modules: Bar, Foo
[debug/compiler]       resetting nodes for module Bar
[debug/compiler]       resetting nodes for module Foo
[debug/compiler]       building scopes for all modules
[debug/compiler]       building scopes for all modules
[debug/ast-scopes] # [HILTI] Bar: ASTs with scopes (round 2)
[debug/ast-scopes]   - Module %8 (bar.hlt:2:1-11:2) [@m:XXX]
[debug/ast-scopes]       | Bar -> declaration::Module %18 <id="Bar"> [canon-id: not set] [@d:XXX] ([@d:XXX])
[debug/ast-scopes]       | Bar1 -> declaration::Type %3 <linkage="public"> [canon-id: Bar::Bar1] (resolved) [@d:XXX] ([@d:XXX])
[debug/ast-scopes]       | Bar2 -> declaration::Type %4 <linkage="public"> [canon-id: Bar::Bar2] (resolved) [@d:XXX] ([@d:XXX])
[debug/ast-scopes]       | Foo -> declaration::ImportedModule %17 <extension=".hlt" path="" scope="-"> [canon-id: Bar::Foo] [@d:XXX] ([@d:XXX])
[debug/ast-scopes]       | bar -> declaration::Function %5 <linkage="private" parent_type="%???"> [canon-id: Bar::bar] [@d:XXX] ([@d:XXX])
[debug/ast-scopes]     - ID <name="Bar"> (bar.hlt:2:8) [@i:XXX]
[debug/ast-scopes]     - statement::Block (bar.hlt:2:1-11:2) [@s:XXX]
[debug/ast-scopes]     - declaration::ImportedModule <extension=".hlt" path="" scope="-"> (bar.hlt:4:1) [canon-id: Bar::Foo] [@d:XXX]
[debug/ast-scopes]         | Bar -> declaration::ImportedModule %19 <extension=".hlt" path="" scope="-"> [canon-id: Foo::Bar] [@d:XXX] ([@d:XXX])
[debug/ast-scopes]         | Foo -> declaration::Module %20 <id="Foo"> [canon-id: not set] [@d:XXX] ([@d:XXX])
[debug/ast-scopes]         | Foo1 -> declaration::Type %11 <linkage="public"> [canon-id: Foo::Foo1] (resolved) [@d:XXX] ([@d:XXX])
[debug/ast-scopes]         | Foo2 -> declaration::Type %12 <linkage="public"> [canon-id: Foo::Foo2] (resolved) [@d:XXX] ([@d:XXX])
[debug/ast-scopes]         | foo -> declaration::Function %13 <linkage="private" parent_type="%???"> [canon-id: Foo::foo] [@d:XXX] ([@d:XXX])
[debug/ast-scopes]       - ID <name="Foo"> (bar.hlt:4:8) [@i:XXX]
[debug/ast-scopes]     - declaration::Type %3 <linkage="public"> (bar.hlt:6:1) [canon-id: Bar::Bar1] (resolved) [@d:XXX]
[debug/ast-scopes]       - ID <name="Bar1"> (bar.hlt:6:13) [@i:XXX]
[debug/ast-scopes]       - type::String (bar.hlt:6:20) (const) (type-id: Bar::Bar1) (resolved) [@t:XXX]
[debug/ast-scopes]       - node::None (foo.hlt:6:1) [@n:XXX]
[debug/ast-scopes]     - declaration::Type %4 <linkage="public"> (bar.hlt:7:1) [canon-id: Bar::Bar2] (resolved) [@d:XXX]
[debug/ast-scopes]       - ID <name="Bar2"> (bar.hlt:7:13) [@i:XXX]
[debug/ast-scopes]       - type::Bool (alias) (foo.hlt:6:20) (const) (type-id: Foo::Foo1) (resolved) [@t:XXX]
[debug/ast-scopes]       - node::None (foo.hlt:6:1) [@n:XXX]
[debug/ast-scopes]     - declaration::Function %5 <linkage="private" parent_type="%???"> (bar.hlt:9:1) [canon-id: Bar::bar] [@d:XXX]
[debug/ast-scopes]         | bar -> declaration::Parameter %6 <is_type_param="false" kind="in"> [canon-id: Bar::bar::bar] [@d:XXX] ([@d:XXX])
[debug/ast-scopes]         | foo -> declaration::Parameter %7 <is_type_param="false" kind="in"> [canon-id: Bar::bar::foo] [@d:XXX] ([@d:XXX])
[debug/ast-scopes]       - Function <cc="<standard>"> (bar.hlt:9:8) [@f:XXX]
[debug/ast-scopes]         - ID <name="bar"> (bar.hlt:9:16) [@i:XXX]
[debug/ast-scopes]         - type::Function <flavor="standard"> (bar.hlt:9:8) (const) (resolved) [@t:XXX]
[debug/ast-scopes]           - type::function::Result (bar.hlt:9:9) [@t:XXX]
[debug/ast-scopes]             - type::String (bar.hlt:9:9) (const) (resolved) [@t:XXX]
[debug/ast-scopes]           - node::None (foo.hlt:9:8) [@n:XXX]
[debug/ast-scopes]           - declaration::Parameter %6 <is_type_param="false" kind="in"> (bar.hlt:9:20) [canon-id: Bar::bar::bar] [@d:XXX]
[debug/ast-scopes]             - ID <name="bar"> (bar.hlt:9:25) [@i:XXX]
[debug/ast-scopes]             - type::String (alias) (bar.hlt:6:20) (const) (type-id: Bar::Bar1) (resolved) [@t:XXX]
[debug/ast-scopes]             - node::None (foo.hlt:9:20) [@n:XXX]
[debug/ast-scopes]           - declaration::Parameter %7 <is_type_param="false" kind="in"> (bar.hlt:9:29) [canon-id: Bar::bar::foo] [@d:XXX]
[debug/ast-scopes]             - ID <name="foo"> (bar.hlt:9:40) [@i:XXX]
[debug/ast-scopes]             - type::Bool (alias) (foo.hlt:6:20) (const) (type-id: Foo::Foo1) (resolved) [@t:XXX]
[debug/ast-scopes]             - node::None (foo.hlt:9:20) [@n:XXX]
[debug/ast-scopes]         - node::None (foo.hlt:9:8) [@n:XXX]
[debug/ast-scopes]         - node::None (foo.hlt:6:1) [@n:XXX]
[debug/ast-scopes] # [HILTI] Foo: ASTs with scopes (round 2)
[debug/ast-scopes]   - Module %1 (foo.hlt:2:1-11:2) [@m:XXX]
[debug/ast-scopes]       | Bar -> declaration::ImportedModule %19 <extension=".hlt" path="" scope="-"> [canon-id: Foo::Bar] [@d:XXX] ([@d:XXX])
[debug/ast-scopes]       | Foo -> declaration::Module %20 <id="Foo"> [canon-id: not set] [@d:XXX] ([@d:XXX])
[debug/ast-scopes]       | Foo1 -> declaration::Type %11 <linkage="public"> [canon-id: Foo::Foo1] (resolved) [@d:XXX] ([@d:XXX])
[debug/ast-scopes]       | Foo2 -> declaration::Type %12 <linkage="public"> [canon-id: Foo::Foo2] (resolved) [@d:XXX] ([@d:XXX])
[debug/ast-scopes]       | foo -> declaration::Function %13 <linkage="private" parent_type="%???"> [canon-id: Foo::foo] [@d:XXX] ([@d:XXX])
[debug/ast-scopes]     - ID <name="Foo"> (foo.hlt:2:8) [@i:XXX]
[debug/ast-scopes]     - statement::Block (foo.hlt:2:1-11:2) [@s:XXX]
[debug/ast-scopes]     - declaration::ImportedModule <extension=".hlt" path="" scope="-"> (foo.hlt:4:1) [canon-id: Foo::Bar] [@d:XXX]
[debug/ast-scopes]         | Bar -> declaration::Module %18 <id="Bar"> [canon-id: not set] [@d:XXX] ([@d:XXX])
[debug/ast-scopes]         | Bar1 -> declaration::Type %3 <linkage="public"> [canon-id: Bar::Bar1] (resolved) [@d:XXX] ([@d:XXX])
[debug/ast-scopes]         | Bar2 -> declaration::Type %4 <linkage="public"> [canon-id: Bar::Bar2] (resolved) [@d:XXX] ([@d:XXX])
[debug/ast-scopes]         | Foo -> declaration::ImportedModule %17 <extension=".hlt" path="" scope="-"> [canon-id: Bar::Foo] [@d:XXX] ([@d:XXX])
[debug/ast-scopes]         | bar -> declaration::Function %5 <linkage="private" parent_type="%???"> [canon-id: Bar::bar] [@d:XXX] ([@d:XXX])
[debug/ast-scopes]       - ID <name="Bar"> (foo.hlt:4:8) [@i:XXX]
[debug/ast-scopes]     - declaration::Type %11 <linkage="public"> (foo.hlt:6:1) [canon-id: Foo::Foo1] (resolved) [@d:XXX]
[debug/ast-scopes]       - ID <name="Foo1"> (foo.hlt:6:13) [@i:XXX]
[debug/ast-scopes]       - type::Bool (foo.hlt:6:20) (const) (type-id: Foo::Foo1) (resolved) [@t:XXX]
[debug/ast-scopes]       - node::None (foo.hlt:6:1) [@n:XXX]
[debug/ast-scopes]     - declaration::Type %12 <linkage="public"> (foo.hlt:7:1) [canon-id: Foo::Foo2] (resolved) [@d:XXX]
[debug/ast-scopes]       - ID <name="Foo2"> (foo.hlt:7:13) [@i:XXX]
[debug/ast-scopes]       - type::String (alias) (bar.hlt:6:20) (const) (type-id: Bar::Bar1) (resolved) [@t:XXX]
[debug/ast-scopes]       - node::None (foo.hlt:6:1) [@n:XXX]
[debug/ast-scopes]     - declaration::Function %13 <linkage="private" parent_type="%???"> (foo.hlt:9:1) [canon-id: Foo::foo] [@d:XXX]
[debug/ast-scopes]         | bar -> declaration::Parameter %15 <is_type_param="false" kind="in"> [canon-id: Foo::foo::bar] [@d:XXX] ([@d:XXX])
[debug/ast-scopes]         | foo -> declaration::Parameter %14 <is_type_param="false" kind="in"> [canon-id: Foo::foo::foo] [@d:XXX] ([@d:XXX])
[debug/ast-scopes]       - Function <cc="<standard>"> (foo.hlt:9:8) [@f:XXX]
[debug/ast-scopes]         - ID <name="foo"> (foo.hlt:9:16) [@i:XXX]
[debug/ast-scopes]         - type::Function <flavor="standard"> (foo.hlt:9:8) (const) (resolved) [@t:XXX]
[debug/ast-scopes]           - type::function::Result (foo.hlt:9:9) [@t:XXX]
[debug/ast-scopes]             - type::String (foo.hlt:9:9) (const) (resolved) [@t:XXX]
[debug/ast-scopes]           - node::None (foo.hlt:9:8) [@n:XXX]
[debug/ast-scopes]           - declaration::Parameter %14 <is_type_param="false" kind="in"> (foo.hlt:9:20) [canon-id: Foo::foo::foo] [@d:XXX]
[debug/ast-scopes]             - ID <name="foo"> (foo.hlt:9:25) [@i:XXX]
[debug/ast-scopes]             - type::Bool (alias) (foo.hlt:6:20) (const) (type-id: Foo::Foo1) (resolved) [@t:XXX]
[debug/ast-scopes]             - node::None (foo.hlt:9:20) [@n:XXX]
[debug/ast-scopes]           - declaration::Parameter %15 <is_type_param="false" kind="in"> (foo.hlt:9:29) [canon-id: Foo::foo::bar] [@d:XXX]
[debug/ast-scopes]             - ID <name="bar"> (foo.hlt:9:40) [@i:XXX]
[debug/ast-scopes]             - type::String (alias) (bar.hlt:6:20) (const) (type-id: Bar::Bar1) (resolved) [@t:XXX]
[debug/ast-scopes]             - node::None (foo.hlt:9:20) [@n:XXX]
[debug/ast-scopes]         - node::None (foo.hlt:9:8) [@n:XXX]
[debug/ast-scopes]         - node::None (foo.hlt:6:1) [@n:XXX]
[debug/compiler]       normalizing nodes in module Bar
[debug/compiler]       coercing nodes in module Bar
[debug/compiler]       resolving nodes in module Bar
[debug/compiler]       normalizing nodes in module Foo
[debug/compiler]       coercing nodes in module Foo
[debug/compiler]       resolving nodes in module Foo
[debug/compiler]     validating module Bar
[debug/compiler]     validating module Foo
[debug/ast-final] # [HILTI] Bar: Final AST
[debug/ast-final]   - Module %8 (bar.hlt:2:1-11:2) [@m:XXX]
[debug/ast-final]       | Bar -> declaration::Module %18 <id="Bar"> [canon-id: Bar] [@d:XXX] ([@d:XXX])
[debug/ast-final]       | Bar1 -> declaration::Type %3 <linkage="public"> [canon-id: Bar::Bar1] (resolved) [@d:XXX] ([@d:XXX])
[debug/ast-final]       | Bar2 -> declaration::Type %4 <linkage="public"> [canon-id: Bar::Bar2] (resolved) [@d:XXX] ([@d:XXX])
[debug/ast-final]       | Foo -> declaration::ImportedModule %17 <extension=".hlt" path="" scope="-"> [canon-id: Bar::Foo] [@d:XXX] ([@d:XXX])
[debug/ast-final]       | bar -> declaration::Function %5 <linkage="private" parent_type="%???"> [canon-id: Bar::bar] [@d:XXX] ([@d:XXX])
[debug/ast-final]     - ID <name="Bar"> (bar.hlt:2:8) [@i:XXX]
[debug/ast-final]     - statement::Block (bar.hlt:2:1-11:2) [@s:XXX]
[debug/ast-final]     - declaration::ImportedModule <extension=".hlt" path="" scope="-"> (bar.hlt:4:1) [canon-id: Bar::Foo] [@d:XXX]
[debug/ast-final]         | Bar -> declaration::ImportedModule %19 <extension=".hlt" path="" scope="-"> [canon-id: Foo::Bar] [@d:XXX] ([@d:XXX])
[debug/ast-final]         | Foo -> declaration::Module %20 <id="Foo"> [canon-id: Bar::Foo] [@d:XXX] ([@d:XXX])
[debug/ast-final]         | Foo1 -> declaration::Type %11 <linkage="public"> [canon-id: Foo::Foo1] (resolved) [@d:XXX] ([@d:XXX])
[debug/ast-final]         | Foo2 -> declaration::Type %12 <linkage="public"> [canon-id: Foo::Foo2] (resolved) [@d:XXX] ([@d:XXX])
[debug/ast-final]         | foo -> declaration::Function %13 <linkage="private" parent_type="%???"> [canon-id: Foo::foo] [@d:XXX] ([@d:XXX])
[debug/ast-final]       - ID <name="Foo"> (bar.hlt:4:8) [@i:XXX]
[debug/ast-final]     - declaration::Type %3 <linkage="public"> (bar.hlt:6:1) [canon-id: Bar::Bar1] (resolved) [@d:XXX]
[debug/ast-final]       - ID <name="Bar1"> (bar.hlt:6:13) [@i:XXX]
[debug/ast-final]       - type::String (bar.hlt:6:20) (const) (type-id: Bar::Bar1) (resolved) [@t:XXX]
[debug/ast-final]       - node::None (foo.hlt:6:1) [@n:XXX]
[debug/ast-final]     - declaration::Type %4 <linkage="public"> (bar.hlt:7:1) [canon-id: Bar::Bar2] (resolved) [@d:XXX]
[debug/ast-final]       - ID <name="Bar2"> (bar.hlt:7:13) [@i:XXX]
[debug/ast-final]       - type::Bool (alias) (foo.hlt:6:20) (const) (type-id: Foo::Foo1) (resolved) [@t:XXX]
[debug/ast-final]       - node::None (foo.hlt:6:1) [@n:XXX]
[debug/ast-final]     - declaration::Function %5 <linkage="private" parent_type="%???"> (bar.hlt:9:1) [canon-id: Bar::bar] [@d:XXX]
[debug/ast-final]         | bar -> declaration::Parameter %6 <is_type_param="false" kind="in"> [canon-id: Bar::bar::bar] [@d:XXX] ([@d:XXX])
[debug/ast-final]         | foo -> declaration::Parameter %7 <is_type_param="false" kind="in"> [canon-id: Bar::bar::foo] [@d:XXX] ([@d:XXX])
[debug/ast-final]       - Function <cc="<standard>"> (bar.hlt:9:8) [@f:XXX]
[debug/ast-final]         - ID <name="bar"> (bar.hlt:9:16) [@i:XXX]
[debug/ast-final]         - type::Function <flavor="standard"> (bar.hlt:9:8) (const) (resolved) [@t:XXX]
[debug/ast-final]           - type::function::Result (bar.hlt:9:9) [@t:XXX]
[debug/ast-final]             - type::String (bar.hlt:9:9) (const) (resolved) [@t:XXX]
[debug/ast-final]           - node::None (foo.hlt:9:8) [@n:XXX]
[debug/ast-final]           - declaration::Parameter %6 <is_type_param="false" kind="in"> (bar.hlt:9:20) [canon-id: Bar::bar::bar] [@d:XXX]
[debug/ast-final]             - ID <name="bar"> (bar.hlt:9:25) [@i:XXX]
[debug/ast-final]             - type::String (alias) (bar.hlt:6:20) (const) (type-id: Bar::Bar1) (resolved) [@t:XXX]
[debug/ast-final]             - node::None (foo.hlt:9:20) [@n:XXX]
[debug/ast-final]           - declaration::Parameter %7 <is_type_param="false" kind="in"> (bar.hlt:9:29) [canon-id: Bar::bar::foo] [@d:XXX]
[debug/ast-final]             - ID <name="foo"> (bar.hlt:9:40) [@i:XXX]
[debug/ast-final]             - type::Bool (alias) (foo.hlt:6:20) (const) (type-id: Foo::Foo1) (resolved) [@t:XXX]
[debug/ast-final]             - node::None (foo.hlt:9:20) [@n:XXX]
[debug/ast-final]         - node::None (foo.hlt:9:8) [@n:XXX]
[debug/ast-final]         - node::None (foo.hlt:6:1) [@n:XXX]
[debug/ast-final] # [HILTI] Foo: Final AST
[debug/ast-final]   - Module %1 (foo.hlt:2:1-11:2) [@m:XXX]
[debug/ast-final]       | Bar -> declaration::ImportedModule %19 <extension=".hlt" path="" scope="-"> [canon-id: Foo::Bar] [@d:XXX] ([@d:XXX])
[debug/ast-final]       | Foo -> declaration::Module %20 <id="Foo"> [canon-id: Bar::Foo] [@d:XXX] ([@d:XXX])
[debug/ast-final]       | Foo1 -> declaration::Type %11 <linkage="public"> [canon-id: Foo::Foo1] (resolved) [@d:XXX] ([@d:XXX])
[debug/ast-final]       | Foo2 -> declaration::Type %12 <linkage="public"> [canon-id: Foo::Foo2] (resolved) [@d:XXX] ([@d:XXX])
[debug/ast-final]       | foo -> declaration::Function %13 <linkage="private" parent_type="%???"> [canon-id: Foo::foo] [@d:XXX] ([@d:XXX])
[debug/ast-final]     - ID <name="Foo"> (foo.hlt:2:8) [@i:XXX]
[debug/ast-final]     - statement::Block (foo.hlt:2:1-11:2) [@s:XXX]
[debug/ast-final]     - declaration::ImportedModule <extension=".hlt" path="" scope="-"> (foo.hlt:4:1) [canon-id: Foo::Bar] [@d:XXX]
[debug/ast-final]         | Bar -> declaration::Module %18 <id="Bar"> [canon-id: Bar] [@d:XXX] ([@d:XXX])
[debug/ast-final]         | Bar1 -> declaration::Type %3 <linkage="public"> [canon-id: Bar::Bar1] (resolved) [@d:XXX] ([@d:XXX])
[debug/ast-final]         | Bar2 -> declaration::Type %4 <linkage="public"> [canon-id: Bar::Bar2] (resolved) [@d:XXX] ([@d:XXX])
[debug/ast-final]         | Foo -> declaration::ImportedModule %17 <extension=".hlt" path="" scope="-"> [canon-id: Bar::Foo] [@d:XXX] ([@d:XXX])
[debug/ast-final]         | bar -> declaration::Function %5 <linkage="private" parent_type="%???"> [canon-id: Bar::bar] [@d:XXX] ([@d:XXX])
[debug/ast-final]       - ID <name="Bar"> (foo.hlt:4:8) [@i:XXX]
[debug/ast-final]     - declaration::Type %11 <linkage="public"> (foo.hlt:6:1) [canon-id: Foo::Foo1] (resolved) [@d:XXX]
[debug/ast-final]       - ID <name="Foo1"> (foo.hlt:6:13) [@i:XXX]
[debug/ast-final]       - type::Bool (foo.hlt:6:20) (const) (type-id: Foo::Foo1) (resolved) [@t:XXX]
[debug/ast-final]       - node::None (foo.hlt:6:1) [@n:XXX]
[debug/ast-final]     - declaration::Type %12 <linkage="public"> (foo.hlt:7:1) [canon-id: Foo::Foo2] (resolved) [@d:XXX]
[debug/ast-final]       - ID <name="Foo2"> (foo.hlt:7:13) [@i:XXX]
[debug/ast-final]       - type::String (alias) (bar.hlt:6:20) (const) (type-id: Bar::Bar1) (resolved) [@t:XXX]
[debug/ast-final]       - node::None (foo.hlt:6:1) [@n:XXX]
[debug/ast-final]     - declaration::Function %13 <linkage="private" parent_type="%???"> (foo.hlt:9:1) [canon-id: Foo::foo] [@d:XXX]
[debug/ast-final]         | bar -> declaration::Parameter %15 <is_type_param="false" kind="in"> [canon-id: Foo::foo::bar] [@d:XXX] ([@d:XXX])
[debug/ast-final]         | foo -> declaration::Parameter %14 <is_type_param="false" kind="in"> [canon-id: Foo::foo::foo] [@d:XXX] ([@d:XXX])
[debug/ast-final]       - Function <cc="<standard>"> (foo.hlt:9:8) [@f:XXX]
[debug/ast-final]         - ID <name="foo"> (foo.hlt:9:16) [@i:XXX]
[debug/ast-final]         - type::Function <flavor="standard"> (foo.hlt:9:8) (const) (resolved) [@t:XXX]
[debug/ast-final]           - type::function::Result (foo.hlt:9:9) [@t:XXX]
[debug/ast-final]             - type::String (foo.hlt:9:9) (const) (resolved) [@t:XXX]
[debug/ast-final]           - node::None (foo.hlt:9:8) [@n:XXX]
[debug/ast-final]           - declaration::Parameter %14 <is_type_param="false" kind="in"> (foo.hlt:9:20) [canon-id: Foo::foo::foo] [@d:XXX]
[debug/ast-final]             - ID <name="foo"> (foo.hlt:9:25) [@i:XXX]
[debug/ast-final]             - type::Bool (alias) (foo.hlt:6:20) (const) (type-id: Foo::Foo1) (resolved) [@t:XXX]
[debug/ast-final]             - node::None (foo.hlt:9:20) [@n:XXX]
[debug/ast-final]           - declaration::Parameter %15 <is_type_param="false" kind="in"> (foo.hlt:9:29) [canon-id: Foo::foo::bar] [@d:XXX]
[debug/ast-final]             - ID <name="bar"> (foo.hlt:9:40) [@i:XXX]
[debug/ast-final]             - type::String (alias) (bar.hlt:6:20) (const) (type-id: Bar::Bar1) (resolved) [@t:XXX]
[debug/ast-final]             - node::None (foo.hlt:9:20) [@n:XXX]
[debug/ast-final]         - node::None (foo.hlt:9:8) [@n:XXX]
[debug/ast-final]         - node::None (foo.hlt:6:1) [@n:XXX]
[debug/compiler]   updated cached AST for module Bar (final: yes, requires_compilation: no, dependencies: Foo)
[debug/compiler]   updated cached AST for module Foo (final: yes, requires_compilation: yes, dependencies: Bar)
[debug/compiler]   compiling module Foo to C++
[debug/compiler]     importing declarations from module Bar
[debug/compiler]     finalizing module Foo
// Begin of Foo (from "foo.hlt")
// Compiled by HILTI version X.X.X

#include <hilti/rt/compiler-setup.h>

#include <hilti/rt/libhilti.h>

namespace __hlt::Foo {
    extern void __register_module();
}

HILTI_PRE_INIT(__hlt::Foo::__register_module)

extern void __hlt::Foo::__register_module() { hilti::rt::detail::registerModule({ "Foo", nullptr, nullptr, nullptr}); }

/* __HILTI_LINKER_V1__
{"module":"Foo","namespace":"__hlt::Foo","path":"<...>/foo.hlt","version":1}
*/

