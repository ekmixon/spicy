### BTest baseline data generated by btest-diff. Do not edit. Use "btest -U/-u" to update. Requires BTest >= 0.63.
[debug/compiler] parsing file "foo.hlt"
[debug/compiler] registering AST for module Foo ("<...>//foo.hlt")
[debug/compiler]   Plugin HILTI
[debug/compiler]     processing AST, round 1
[debug/compiler]       performing missing imports for module Foo
[debug/compiler]         parsing file "./bar.hlt"
[debug/compiler]         loaded module Bar from "./bar.hlt"
[debug/compiler]         registering AST for module Bar ("<...>//bar.hlt")
[debug/compiler]         updated cached AST for module Bar (final: no, requires_compilation: no, dependencies: Foo)
[debug/compiler]         updated cached AST for module Foo (final: no, requires_compilation: yes, dependencies: Bar)
[debug/compiler]       performing missing imports for module Bar
[debug/compiler]         updated cached AST for module Bar (final: no, requires_compilation: no, dependencies: Foo)
[debug/compiler]       modules: Bar, Foo
[debug/compiler]       resetting nodes for module Bar
[debug/compiler]       resetting nodes for module Foo
[debug/compiler]       building scopes for all modules
[debug/ast-scopes] # Bar: ASTs with scopes (round 1)
[debug/ast-scopes]   - Module %2 (bar.hlt:2:1-11:2)
[debug/ast-scopes]       | Bar -> declaration::Module %5 <id="Bar">
[debug/ast-scopes]       | Bar1 -> declaration::Type %10 <linkage="public">
[debug/ast-scopes]       | Bar2 -> declaration::Type %11 <linkage="public">
[debug/ast-scopes]       | Foo -> declaration::ImportedModule %9 <extension=".hlt" path="" scope="-">
[debug/ast-scopes]       | bar -> declaration::Function %12 <linkage="private">
[debug/ast-scopes]     - ID <name="Bar"> (bar.hlt:2:8)
[debug/ast-scopes]     - statement::Block (bar.hlt:2:1-11:2)
[debug/ast-scopes]     - declaration::ImportedModule %9 <extension=".hlt" path="" scope="-"> (bar.hlt:4:1)
[debug/ast-scopes]         | Bar -> declaration::ImportedModule %13 <extension=".hlt" path="" scope="-">
[debug/ast-scopes]         | Foo -> declaration::Module %8 <id="Foo">
[debug/ast-scopes]         | Foo1 -> declaration::Type %14 <linkage="public">
[debug/ast-scopes]         | Foo2 -> declaration::Type %15 <linkage="public">
[debug/ast-scopes]         | foo -> declaration::Function %16 <linkage="private">
[debug/ast-scopes]       - ID <name="Foo"> (bar.hlt:4:8)
[debug/ast-scopes]     - declaration::Type %10 <linkage="public"> (bar.hlt:6:1)
[debug/ast-scopes]       - ID <name="Bar1"> (bar.hlt:6:13)
[debug/ast-scopes]       - type::String (bar.hlt:6:20) (non-const)
[debug/ast-scopes]       - node::None (foo.hlt:6:1)
[debug/ast-scopes]     - declaration::Type %11 <linkage="public"> (bar.hlt:7:1)
[debug/ast-scopes]       - ID <name="Bar2"> (bar.hlt:7:13)
[debug/ast-scopes]       - type::UnresolvedID (bar.hlt:7:1) (non-const)
[debug/ast-scopes]         - ID <name="Foo::Foo1"> (bar.hlt:7:20)
[debug/ast-scopes]       - node::None (foo.hlt:6:1)
[debug/ast-scopes]     - declaration::Function %12 <linkage="private"> (bar.hlt:9:1)
[debug/ast-scopes]       - Function <cc="<standard>"> (bar.hlt:9:8)
[debug/ast-scopes]           | bar -> declaration::Parameter %3 <is_struct_param="false" kind="in">
[debug/ast-scopes]           | foo -> declaration::Parameter %4 <is_struct_param="false" kind="in">
[debug/ast-scopes]         - ID <name="bar"> (bar.hlt:9:16)
[debug/ast-scopes]         - type::Function <flavor="standard"> (bar.hlt:9:8) (non-const)
[debug/ast-scopes]           - type::function::Result (bar.hlt:9:9)
[debug/ast-scopes]             - type::String (bar.hlt:9:9) (non-const)
[debug/ast-scopes]           - declaration::Parameter %3 <is_struct_param="false" kind="in"> (bar.hlt:9:20)
[debug/ast-scopes]             - ID <name="bar"> (bar.hlt:9:25)
[debug/ast-scopes]             - type::UnresolvedID (bar.hlt:9:20) (non-const)
[debug/ast-scopes]               - ID <name="Bar1"> (bar.hlt:9:20)
[debug/ast-scopes]             - node::None (foo.hlt:9:20)
[debug/ast-scopes]           - declaration::Parameter %4 <is_struct_param="false" kind="in"> (bar.hlt:9:29)
[debug/ast-scopes]             - ID <name="foo"> (bar.hlt:9:40)
[debug/ast-scopes]             - type::UnresolvedID (bar.hlt:9:29) (non-const)
[debug/ast-scopes]               - ID <name="Foo::Foo1"> (bar.hlt:9:30)
[debug/ast-scopes]             - node::None (foo.hlt:9:20)
[debug/ast-scopes]         - node::None (foo.hlt:9:8)
[debug/ast-scopes]         - node::None (foo.hlt:6:1)
[debug/ast-scopes] # Foo: ASTs with scopes (round 1)
[debug/ast-scopes]   - Module %1 (foo.hlt:2:1-11:2)
[debug/ast-scopes]       | Bar -> declaration::ImportedModule %13 <extension=".hlt" path="" scope="-">
[debug/ast-scopes]       | Foo -> declaration::Module %8 <id="Foo">
[debug/ast-scopes]       | Foo1 -> declaration::Type %14 <linkage="public">
[debug/ast-scopes]       | Foo2 -> declaration::Type %15 <linkage="public">
[debug/ast-scopes]       | foo -> declaration::Function %16 <linkage="private">
[debug/ast-scopes]     - ID <name="Foo"> (foo.hlt:2:8)
[debug/ast-scopes]     - statement::Block (foo.hlt:2:1-11:2)
[debug/ast-scopes]     - declaration::ImportedModule %13 <extension=".hlt" path="" scope="-"> (foo.hlt:4:1)
[debug/ast-scopes]         | Bar -> declaration::Module %5 <id="Bar">
[debug/ast-scopes]         | Bar1 -> declaration::Type %10 <linkage="public">
[debug/ast-scopes]         | Bar2 -> declaration::Type %11 <linkage="public">
[debug/ast-scopes]         | Foo -> declaration::ImportedModule %9 <extension=".hlt" path="" scope="-">
[debug/ast-scopes]         | bar -> declaration::Function %12 <linkage="private">
[debug/ast-scopes]       - ID <name="Bar"> (foo.hlt:4:8)
[debug/ast-scopes]     - declaration::Type %14 <linkage="public"> (foo.hlt:6:1)
[debug/ast-scopes]       - ID <name="Foo1"> (foo.hlt:6:13)
[debug/ast-scopes]       - type::Bool (foo.hlt:6:20) (non-const)
[debug/ast-scopes]       - node::None (foo.hlt:6:1)
[debug/ast-scopes]     - declaration::Type %15 <linkage="public"> (foo.hlt:7:1)
[debug/ast-scopes]       - ID <name="Foo2"> (foo.hlt:7:13)
[debug/ast-scopes]       - type::UnresolvedID (foo.hlt:7:1) (non-const)
[debug/ast-scopes]         - ID <name="Bar::Bar1"> (foo.hlt:7:20)
[debug/ast-scopes]       - node::None (foo.hlt:6:1)
[debug/ast-scopes]     - declaration::Function %16 <linkage="private"> (foo.hlt:9:1)
[debug/ast-scopes]       - Function <cc="<standard>"> (foo.hlt:9:8)
[debug/ast-scopes]           | bar -> declaration::Parameter %7 <is_struct_param="false" kind="in">
[debug/ast-scopes]           | foo -> declaration::Parameter %6 <is_struct_param="false" kind="in">
[debug/ast-scopes]         - ID <name="foo"> (foo.hlt:9:16)
[debug/ast-scopes]         - type::Function <flavor="standard"> (foo.hlt:9:8) (non-const)
[debug/ast-scopes]           - type::function::Result (foo.hlt:9:9)
[debug/ast-scopes]             - type::String (foo.hlt:9:9) (non-const)
[debug/ast-scopes]           - declaration::Parameter %6 <is_struct_param="false" kind="in"> (foo.hlt:9:20)
[debug/ast-scopes]             - ID <name="foo"> (foo.hlt:9:25)
[debug/ast-scopes]             - type::UnresolvedID (foo.hlt:9:20) (non-const)
[debug/ast-scopes]               - ID <name="Foo1"> (foo.hlt:9:20)
[debug/ast-scopes]             - node::None (foo.hlt:9:20)
[debug/ast-scopes]           - declaration::Parameter %7 <is_struct_param="false" kind="in"> (foo.hlt:9:29)
[debug/ast-scopes]             - ID <name="bar"> (foo.hlt:9:40)
[debug/ast-scopes]             - type::UnresolvedID (foo.hlt:9:29) (non-const)
[debug/ast-scopes]               - ID <name="Bar::Bar1"> (foo.hlt:9:30)
[debug/ast-scopes]             - node::None (foo.hlt:9:20)
[debug/ast-scopes]         - node::None (foo.hlt:9:8)
[debug/ast-scopes]         - node::None (foo.hlt:6:1)
[debug/compiler]       resolving IDs in module Bar
[debug/resolver]   modified by HILTI id-resolver.cc/264
[debug/resolver]   modified by HILTI id-resolver.cc/264
[debug/resolver] resolved ID Foo::Foo1 (./bar.hlt:7:20) to declaration::Type %14 <linkage="public"> (foo.hlt:6:1)
[debug/resolver]   modified by HILTI id-resolver.cc/104
[debug/resolver] resolved ID Bar1 (./bar.hlt:9:20) to declaration::Type %10 <linkage="public"> (bar.hlt:6:1)
[debug/resolver]   modified by HILTI id-resolver.cc/104
[debug/resolver] resolved ID Foo::Foo1 (./bar.hlt:9:30) to declaration::Type %14 <linkage="public"> (foo.hlt:6:1)
[debug/resolver]   modified by HILTI id-resolver.cc/104
[debug/compiler]         -> modified
[debug/compiler]       resolving IDs in module Foo
[debug/resolver]   modified by HILTI id-resolver.cc/264
[debug/resolver]   modified by HILTI id-resolver.cc/264
[debug/resolver] resolved ID Bar::Bar1 (foo.hlt:7:20) to declaration::Type %10 <linkage="public"> (bar.hlt:6:1)
[debug/resolver]   modified by HILTI id-resolver.cc/104
[debug/resolver] resolved ID Foo1 (foo.hlt:9:20) to declaration::Type %14 <linkage="public"> (foo.hlt:6:1)
[debug/resolver]   modified by HILTI id-resolver.cc/104
[debug/resolver] resolved ID Bar::Bar1 (foo.hlt:9:30) to declaration::Type %10 <linkage="public"> (bar.hlt:6:1)
[debug/resolver]   modified by HILTI id-resolver.cc/104
[debug/compiler]         -> modified
[debug/compiler]       resolving operators in module Bar
[debug/compiler]       resolving operators in module Foo
[debug/compiler]       coercing expressions for Bar
[debug/compiler]       coercing expressions for Foo
[debug/compiler]     processing AST, round 2
[debug/compiler]       modules: Bar, Foo
[debug/compiler]       resetting nodes for module Bar
[debug/compiler]       resetting nodes for module Foo
[debug/compiler]       building scopes for all modules
[debug/ast-scopes] # Bar: ASTs with scopes (round 2)
[debug/ast-scopes]   - Module %2 (bar.hlt:2:1-11:2)
[debug/ast-scopes]       | Bar -> declaration::Module %17 <id="Bar">
[debug/ast-scopes]       | Bar1 -> declaration::Type %10 <linkage="public">
[debug/ast-scopes]       | Bar2 -> declaration::Type %11 <linkage="public">
[debug/ast-scopes]       | Foo -> declaration::ImportedModule %9 <extension=".hlt" path="" scope="-">
[debug/ast-scopes]       | bar -> declaration::Function %12 <linkage="private">
[debug/ast-scopes]     - ID <name="Bar"> (bar.hlt:2:8)
[debug/ast-scopes]     - statement::Block (bar.hlt:2:1-11:2)
[debug/ast-scopes]     - declaration::ImportedModule %9 <extension=".hlt" path="" scope="-"> (bar.hlt:4:1)
[debug/ast-scopes]         | Bar -> declaration::ImportedModule %13 <extension=".hlt" path="" scope="-">
[debug/ast-scopes]         | Foo -> declaration::Module %18 <id="Foo">
[debug/ast-scopes]         | Foo1 -> declaration::Type %14 <linkage="public">
[debug/ast-scopes]         | Foo2 -> declaration::Type %15 <linkage="public">
[debug/ast-scopes]         | foo -> declaration::Function %16 <linkage="private">
[debug/ast-scopes]       - ID <name="Foo"> (bar.hlt:4:8)
[debug/ast-scopes]     - declaration::Type %10 <linkage="public"> (bar.hlt:6:1)
[debug/ast-scopes]       - ID <name="Bar1"> (bar.hlt:6:13)
[debug/ast-scopes]       - type::String (bar.hlt:6:20) (non-const) (type-id: Bar::Bar1)
[debug/ast-scopes]       - node::None (foo.hlt:6:1)
[debug/ast-scopes]     - declaration::Type %11 <linkage="public"> (bar.hlt:7:1)
[debug/ast-scopes]       - ID <name="Bar2"> (bar.hlt:7:13)
[debug/ast-scopes]       - type::ResolvedID <resolved="%14"> (type: Foo::Foo1) (bar.hlt:7:1) (non-const)
[debug/ast-scopes]         - ID <name="Foo::Foo1"> (bar.hlt:7:1)
[debug/ast-scopes]       - node::None (foo.hlt:6:1)
[debug/ast-scopes]     - declaration::Function %12 <linkage="private"> (bar.hlt:9:1)
[debug/ast-scopes]       - Function <cc="<standard>"> (bar.hlt:9:8)
[debug/ast-scopes]           | bar -> declaration::Parameter %3 <is_struct_param="false" kind="in">
[debug/ast-scopes]           | foo -> declaration::Parameter %4 <is_struct_param="false" kind="in">
[debug/ast-scopes]         - ID <name="bar"> (bar.hlt:9:16)
[debug/ast-scopes]         - type::Function <flavor="standard"> (bar.hlt:9:8) (non-const)
[debug/ast-scopes]           - type::function::Result (bar.hlt:9:9)
[debug/ast-scopes]             - type::String (bar.hlt:9:9) (non-const)
[debug/ast-scopes]           - declaration::Parameter %3 <is_struct_param="false" kind="in"> (bar.hlt:9:20)
[debug/ast-scopes]             - ID <name="bar"> (bar.hlt:9:25)
[debug/ast-scopes]             - type::ResolvedID <resolved="%10"> (type: Bar::Bar1) (bar.hlt:9:20) (non-const)
[debug/ast-scopes]               - ID <name="Bar::Bar1"> (bar.hlt:9:20)
[debug/ast-scopes]             - node::None (foo.hlt:9:20)
[debug/ast-scopes]           - declaration::Parameter %4 <is_struct_param="false" kind="in"> (bar.hlt:9:29)
[debug/ast-scopes]             - ID <name="foo"> (bar.hlt:9:40)
[debug/ast-scopes]             - type::ResolvedID <resolved="%14"> (type: Foo::Foo1) (bar.hlt:9:29) (non-const)
[debug/ast-scopes]               - ID <name="Foo::Foo1"> (bar.hlt:9:29)
[debug/ast-scopes]             - node::None (foo.hlt:9:20)
[debug/ast-scopes]         - node::None (foo.hlt:9:8)
[debug/ast-scopes]         - node::None (foo.hlt:6:1)
[debug/ast-scopes] # Foo: ASTs with scopes (round 2)
[debug/ast-scopes]   - Module %1 (foo.hlt:2:1-11:2)
[debug/ast-scopes]       | Bar -> declaration::ImportedModule %13 <extension=".hlt" path="" scope="-">
[debug/ast-scopes]       | Foo -> declaration::Module %18 <id="Foo">
[debug/ast-scopes]       | Foo1 -> declaration::Type %14 <linkage="public">
[debug/ast-scopes]       | Foo2 -> declaration::Type %15 <linkage="public">
[debug/ast-scopes]       | foo -> declaration::Function %16 <linkage="private">
[debug/ast-scopes]     - ID <name="Foo"> (foo.hlt:2:8)
[debug/ast-scopes]     - statement::Block (foo.hlt:2:1-11:2)
[debug/ast-scopes]     - declaration::ImportedModule %13 <extension=".hlt" path="" scope="-"> (foo.hlt:4:1)
[debug/ast-scopes]         | Bar -> declaration::Module %17 <id="Bar">
[debug/ast-scopes]         | Bar1 -> declaration::Type %10 <linkage="public">
[debug/ast-scopes]         | Bar2 -> declaration::Type %11 <linkage="public">
[debug/ast-scopes]         | Foo -> declaration::ImportedModule %9 <extension=".hlt" path="" scope="-">
[debug/ast-scopes]         | bar -> declaration::Function %12 <linkage="private">
[debug/ast-scopes]       - ID <name="Bar"> (foo.hlt:4:8)
[debug/ast-scopes]     - declaration::Type %14 <linkage="public"> (foo.hlt:6:1)
[debug/ast-scopes]       - ID <name="Foo1"> (foo.hlt:6:13)
[debug/ast-scopes]       - type::Bool (foo.hlt:6:20) (non-const) (type-id: Foo::Foo1)
[debug/ast-scopes]       - node::None (foo.hlt:6:1)
[debug/ast-scopes]     - declaration::Type %15 <linkage="public"> (foo.hlt:7:1)
[debug/ast-scopes]       - ID <name="Foo2"> (foo.hlt:7:13)
[debug/ast-scopes]       - type::ResolvedID <resolved="%10"> (type: Bar::Bar1) (foo.hlt:7:1) (non-const)
[debug/ast-scopes]         - ID <name="Bar::Bar1"> (foo.hlt:7:1)
[debug/ast-scopes]       - node::None (foo.hlt:6:1)
[debug/ast-scopes]     - declaration::Function %16 <linkage="private"> (foo.hlt:9:1)
[debug/ast-scopes]       - Function <cc="<standard>"> (foo.hlt:9:8)
[debug/ast-scopes]           | bar -> declaration::Parameter %7 <is_struct_param="false" kind="in">
[debug/ast-scopes]           | foo -> declaration::Parameter %6 <is_struct_param="false" kind="in">
[debug/ast-scopes]         - ID <name="foo"> (foo.hlt:9:16)
[debug/ast-scopes]         - type::Function <flavor="standard"> (foo.hlt:9:8) (non-const)
[debug/ast-scopes]           - type::function::Result (foo.hlt:9:9)
[debug/ast-scopes]             - type::String (foo.hlt:9:9) (non-const)
[debug/ast-scopes]           - declaration::Parameter %6 <is_struct_param="false" kind="in"> (foo.hlt:9:20)
[debug/ast-scopes]             - ID <name="foo"> (foo.hlt:9:25)
[debug/ast-scopes]             - type::ResolvedID <resolved="%14"> (type: Foo::Foo1) (foo.hlt:9:20) (non-const)
[debug/ast-scopes]               - ID <name="Foo::Foo1"> (foo.hlt:9:20)
[debug/ast-scopes]             - node::None (foo.hlt:9:20)
[debug/ast-scopes]           - declaration::Parameter %7 <is_struct_param="false" kind="in"> (foo.hlt:9:29)
[debug/ast-scopes]             - ID <name="bar"> (foo.hlt:9:40)
[debug/ast-scopes]             - type::ResolvedID <resolved="%10"> (type: Bar::Bar1) (foo.hlt:9:29) (non-const)
[debug/ast-scopes]               - ID <name="Bar::Bar1"> (foo.hlt:9:29)
[debug/ast-scopes]             - node::None (foo.hlt:9:20)
[debug/ast-scopes]         - node::None (foo.hlt:9:8)
[debug/ast-scopes]         - node::None (foo.hlt:6:1)
[debug/compiler]       resolving IDs in module Bar
[debug/resolver]   modified by HILTI id-resolver.cc/264
[debug/compiler]         -> modified
[debug/compiler]       resolving IDs in module Foo
[debug/resolver]   modified by HILTI id-resolver.cc/264
[debug/compiler]         -> modified
[debug/compiler]       resolving operators in module Bar
[debug/compiler]       resolving operators in module Foo
[debug/compiler]       coercing expressions for Bar
[debug/compiler]       coercing expressions for Foo
[debug/compiler]     processing AST, round 3
[debug/compiler]       modules: Bar, Foo
[debug/compiler]       resetting nodes for module Bar
[debug/compiler]       resetting nodes for module Foo
[debug/compiler]       building scopes for all modules
[debug/ast-scopes] # Bar: ASTs with scopes (round 3)
[debug/ast-scopes]   - Module %2 (bar.hlt:2:1-11:2)
[debug/ast-scopes]       | Bar -> declaration::Module %19 <id="Bar">
[debug/ast-scopes]       | Bar1 -> declaration::Type %10 <linkage="public">
[debug/ast-scopes]       | Bar2 -> declaration::Type %11 <linkage="public">
[debug/ast-scopes]       | Foo -> declaration::ImportedModule %9 <extension=".hlt" path="" scope="-">
[debug/ast-scopes]       | bar -> declaration::Function %12 <linkage="private">
[debug/ast-scopes]     - ID <name="Bar"> (bar.hlt:2:8)
[debug/ast-scopes]     - statement::Block (bar.hlt:2:1-11:2)
[debug/ast-scopes]     - declaration::ImportedModule %9 <extension=".hlt" path="" scope="-"> (bar.hlt:4:1)
[debug/ast-scopes]         | Bar -> declaration::ImportedModule %13 <extension=".hlt" path="" scope="-">
[debug/ast-scopes]         | Foo -> declaration::Module %20 <id="Foo">
[debug/ast-scopes]         | Foo1 -> declaration::Type %14 <linkage="public">
[debug/ast-scopes]         | Foo2 -> declaration::Type %15 <linkage="public">
[debug/ast-scopes]         | foo -> declaration::Function %16 <linkage="private">
[debug/ast-scopes]       - ID <name="Foo"> (bar.hlt:4:8)
[debug/ast-scopes]     - declaration::Type %10 <linkage="public"> (bar.hlt:6:1)
[debug/ast-scopes]       - ID <name="Bar1"> (bar.hlt:6:13)
[debug/ast-scopes]       - type::String (bar.hlt:6:20) (non-const) (type-id: Bar::Bar1)
[debug/ast-scopes]       - node::None (foo.hlt:6:1)
[debug/ast-scopes]     - declaration::Type %11 <linkage="public"> (bar.hlt:7:1)
[debug/ast-scopes]       - ID <name="Bar2"> (bar.hlt:7:13)
[debug/ast-scopes]       - type::Bool (foo.hlt:6:20) (non-const) (type-id: Bar::Bar2)
[debug/ast-scopes]       - node::None (foo.hlt:6:1)
[debug/ast-scopes]     - declaration::Function %12 <linkage="private"> (bar.hlt:9:1)
[debug/ast-scopes]       - Function <cc="<standard>"> (bar.hlt:9:8)
[debug/ast-scopes]           | bar -> declaration::Parameter %3 <is_struct_param="false" kind="in">
[debug/ast-scopes]           | foo -> declaration::Parameter %4 <is_struct_param="false" kind="in">
[debug/ast-scopes]         - ID <name="bar"> (bar.hlt:9:16)
[debug/ast-scopes]         - type::Function <flavor="standard"> (bar.hlt:9:8) (non-const)
[debug/ast-scopes]           - type::function::Result (bar.hlt:9:9)
[debug/ast-scopes]             - type::String (bar.hlt:9:9) (non-const)
[debug/ast-scopes]           - declaration::Parameter %3 <is_struct_param="false" kind="in"> (bar.hlt:9:20)
[debug/ast-scopes]             - ID <name="bar"> (bar.hlt:9:25)
[debug/ast-scopes]             - type::ResolvedID <resolved="%10"> (type: Bar::Bar1) (bar.hlt:9:20) (non-const)
[debug/ast-scopes]               - ID <name="Bar::Bar1"> (bar.hlt:9:20)
[debug/ast-scopes]             - node::None (foo.hlt:9:20)
[debug/ast-scopes]           - declaration::Parameter %4 <is_struct_param="false" kind="in"> (bar.hlt:9:29)
[debug/ast-scopes]             - ID <name="foo"> (bar.hlt:9:40)
[debug/ast-scopes]             - type::ResolvedID <resolved="%14"> (type: Foo::Foo1) (bar.hlt:9:29) (non-const)
[debug/ast-scopes]               - ID <name="Foo::Foo1"> (bar.hlt:9:29)
[debug/ast-scopes]             - node::None (foo.hlt:9:20)
[debug/ast-scopes]         - node::None (foo.hlt:9:8)
[debug/ast-scopes]         - node::None (foo.hlt:6:1)
[debug/ast-scopes] # Foo: ASTs with scopes (round 3)
[debug/ast-scopes]   - Module %1 (foo.hlt:2:1-11:2)
[debug/ast-scopes]       | Bar -> declaration::ImportedModule %13 <extension=".hlt" path="" scope="-">
[debug/ast-scopes]       | Foo -> declaration::Module %20 <id="Foo">
[debug/ast-scopes]       | Foo1 -> declaration::Type %14 <linkage="public">
[debug/ast-scopes]       | Foo2 -> declaration::Type %15 <linkage="public">
[debug/ast-scopes]       | foo -> declaration::Function %16 <linkage="private">
[debug/ast-scopes]     - ID <name="Foo"> (foo.hlt:2:8)
[debug/ast-scopes]     - statement::Block (foo.hlt:2:1-11:2)
[debug/ast-scopes]     - declaration::ImportedModule %13 <extension=".hlt" path="" scope="-"> (foo.hlt:4:1)
[debug/ast-scopes]         | Bar -> declaration::Module %19 <id="Bar">
[debug/ast-scopes]         | Bar1 -> declaration::Type %10 <linkage="public">
[debug/ast-scopes]         | Bar2 -> declaration::Type %11 <linkage="public">
[debug/ast-scopes]         | Foo -> declaration::ImportedModule %9 <extension=".hlt" path="" scope="-">
[debug/ast-scopes]         | bar -> declaration::Function %12 <linkage="private">
[debug/ast-scopes]       - ID <name="Bar"> (foo.hlt:4:8)
[debug/ast-scopes]     - declaration::Type %14 <linkage="public"> (foo.hlt:6:1)
[debug/ast-scopes]       - ID <name="Foo1"> (foo.hlt:6:13)
[debug/ast-scopes]       - type::Bool (foo.hlt:6:20) (non-const) (type-id: Foo::Foo1)
[debug/ast-scopes]       - node::None (foo.hlt:6:1)
[debug/ast-scopes]     - declaration::Type %15 <linkage="public"> (foo.hlt:7:1)
[debug/ast-scopes]       - ID <name="Foo2"> (foo.hlt:7:13)
[debug/ast-scopes]       - type::String (bar.hlt:6:20) (non-const) (type-id: Foo::Foo2)
[debug/ast-scopes]       - node::None (foo.hlt:6:1)
[debug/ast-scopes]     - declaration::Function %16 <linkage="private"> (foo.hlt:9:1)
[debug/ast-scopes]       - Function <cc="<standard>"> (foo.hlt:9:8)
[debug/ast-scopes]           | bar -> declaration::Parameter %7 <is_struct_param="false" kind="in">
[debug/ast-scopes]           | foo -> declaration::Parameter %6 <is_struct_param="false" kind="in">
[debug/ast-scopes]         - ID <name="foo"> (foo.hlt:9:16)
[debug/ast-scopes]         - type::Function <flavor="standard"> (foo.hlt:9:8) (non-const)
[debug/ast-scopes]           - type::function::Result (foo.hlt:9:9)
[debug/ast-scopes]             - type::String (foo.hlt:9:9) (non-const)
[debug/ast-scopes]           - declaration::Parameter %6 <is_struct_param="false" kind="in"> (foo.hlt:9:20)
[debug/ast-scopes]             - ID <name="foo"> (foo.hlt:9:25)
[debug/ast-scopes]             - type::ResolvedID <resolved="%14"> (type: Foo::Foo1) (foo.hlt:9:20) (non-const)
[debug/ast-scopes]               - ID <name="Foo::Foo1"> (foo.hlt:9:20)
[debug/ast-scopes]             - node::None (foo.hlt:9:20)
[debug/ast-scopes]           - declaration::Parameter %7 <is_struct_param="false" kind="in"> (foo.hlt:9:29)
[debug/ast-scopes]             - ID <name="bar"> (foo.hlt:9:40)
[debug/ast-scopes]             - type::ResolvedID <resolved="%10"> (type: Bar::Bar1) (foo.hlt:9:29) (non-const)
[debug/ast-scopes]               - ID <name="Bar::Bar1"> (foo.hlt:9:29)
[debug/ast-scopes]             - node::None (foo.hlt:9:20)
[debug/ast-scopes]         - node::None (foo.hlt:9:8)
[debug/ast-scopes]         - node::None (foo.hlt:6:1)
[debug/compiler]       resolving IDs in module Bar
[debug/compiler]       resolving IDs in module Foo
[debug/compiler]       resolving operators in module Bar
[debug/compiler]       resolving operators in module Foo
[debug/compiler]       coercing expressions for Bar
[debug/compiler]       coercing expressions for Foo
[debug/ast-final] # Bar: Final AST
[debug/ast-final]   - Module %2 (bar.hlt:2:1-11:2)
[debug/ast-final]       | Bar -> declaration::Module %19 <id="Bar">
[debug/ast-final]       | Bar1 -> declaration::Type %10 <linkage="public">
[debug/ast-final]       | Bar2 -> declaration::Type %11 <linkage="public">
[debug/ast-final]       | Foo -> declaration::ImportedModule %9 <extension=".hlt" path="" scope="-">
[debug/ast-final]       | bar -> declaration::Function %12 <linkage="private">
[debug/ast-final]     - ID <name="Bar"> (bar.hlt:2:8)
[debug/ast-final]     - statement::Block (bar.hlt:2:1-11:2)
[debug/ast-final]     - declaration::ImportedModule %9 <extension=".hlt" path="" scope="-"> (bar.hlt:4:1)
[debug/ast-final]         | Bar -> declaration::ImportedModule %13 <extension=".hlt" path="" scope="-">
[debug/ast-final]         | Foo -> declaration::Module %20 <id="Foo">
[debug/ast-final]         | Foo1 -> declaration::Type %14 <linkage="public">
[debug/ast-final]         | Foo2 -> declaration::Type %15 <linkage="public">
[debug/ast-final]         | foo -> declaration::Function %16 <linkage="private">
[debug/ast-final]       - ID <name="Foo"> (bar.hlt:4:8)
[debug/ast-final]     - declaration::Type %10 <linkage="public"> (bar.hlt:6:1)
[debug/ast-final]       - ID <name="Bar1"> (bar.hlt:6:13)
[debug/ast-final]       - type::String (bar.hlt:6:20) (non-const) (type-id: Bar::Bar1)
[debug/ast-final]       - node::None (foo.hlt:6:1)
[debug/ast-final]     - declaration::Type %11 <linkage="public"> (bar.hlt:7:1)
[debug/ast-final]       - ID <name="Bar2"> (bar.hlt:7:13)
[debug/ast-final]       - type::Bool (foo.hlt:6:20) (non-const) (type-id: Bar::Bar2)
[debug/ast-final]       - node::None (foo.hlt:6:1)
[debug/ast-final]     - declaration::Function %12 <linkage="private"> (bar.hlt:9:1)
[debug/ast-final]       - Function <cc="<standard>"> (bar.hlt:9:8)
[debug/ast-final]           | bar -> declaration::Parameter %3 <is_struct_param="false" kind="in">
[debug/ast-final]           | foo -> declaration::Parameter %4 <is_struct_param="false" kind="in">
[debug/ast-final]         - ID <name="bar"> (bar.hlt:9:16)
[debug/ast-final]         - type::Function <flavor="standard"> (bar.hlt:9:8) (non-const)
[debug/ast-final]           - type::function::Result (bar.hlt:9:9)
[debug/ast-final]             - type::String (bar.hlt:9:9) (non-const)
[debug/ast-final]           - declaration::Parameter %3 <is_struct_param="false" kind="in"> (bar.hlt:9:20)
[debug/ast-final]             - ID <name="bar"> (bar.hlt:9:25)
[debug/ast-final]             - type::ResolvedID <resolved="%10"> (type: Bar::Bar1) (bar.hlt:9:20) (non-const)
[debug/ast-final]               - ID <name="Bar::Bar1"> (bar.hlt:9:20)
[debug/ast-final]             - node::None (foo.hlt:9:20)
[debug/ast-final]           - declaration::Parameter %4 <is_struct_param="false" kind="in"> (bar.hlt:9:29)
[debug/ast-final]             - ID <name="foo"> (bar.hlt:9:40)
[debug/ast-final]             - type::ResolvedID <resolved="%14"> (type: Foo::Foo1) (bar.hlt:9:29) (non-const)
[debug/ast-final]               - ID <name="Foo::Foo1"> (bar.hlt:9:29)
[debug/ast-final]             - node::None (foo.hlt:9:20)
[debug/ast-final]         - node::None (foo.hlt:9:8)
[debug/ast-final]         - node::None (foo.hlt:6:1)
[debug/ast-final] # Foo: Final AST
[debug/ast-final]   - Module %1 (foo.hlt:2:1-11:2)
[debug/ast-final]       | Bar -> declaration::ImportedModule %13 <extension=".hlt" path="" scope="-">
[debug/ast-final]       | Foo -> declaration::Module %20 <id="Foo">
[debug/ast-final]       | Foo1 -> declaration::Type %14 <linkage="public">
[debug/ast-final]       | Foo2 -> declaration::Type %15 <linkage="public">
[debug/ast-final]       | foo -> declaration::Function %16 <linkage="private">
[debug/ast-final]     - ID <name="Foo"> (foo.hlt:2:8)
[debug/ast-final]     - statement::Block (foo.hlt:2:1-11:2)
[debug/ast-final]     - declaration::ImportedModule %13 <extension=".hlt" path="" scope="-"> (foo.hlt:4:1)
[debug/ast-final]         | Bar -> declaration::Module %19 <id="Bar">
[debug/ast-final]         | Bar1 -> declaration::Type %10 <linkage="public">
[debug/ast-final]         | Bar2 -> declaration::Type %11 <linkage="public">
[debug/ast-final]         | Foo -> declaration::ImportedModule %9 <extension=".hlt" path="" scope="-">
[debug/ast-final]         | bar -> declaration::Function %12 <linkage="private">
[debug/ast-final]       - ID <name="Bar"> (foo.hlt:4:8)
[debug/ast-final]     - declaration::Type %14 <linkage="public"> (foo.hlt:6:1)
[debug/ast-final]       - ID <name="Foo1"> (foo.hlt:6:13)
[debug/ast-final]       - type::Bool (foo.hlt:6:20) (non-const) (type-id: Foo::Foo1)
[debug/ast-final]       - node::None (foo.hlt:6:1)
[debug/ast-final]     - declaration::Type %15 <linkage="public"> (foo.hlt:7:1)
[debug/ast-final]       - ID <name="Foo2"> (foo.hlt:7:13)
[debug/ast-final]       - type::String (bar.hlt:6:20) (non-const) (type-id: Foo::Foo2)
[debug/ast-final]       - node::None (foo.hlt:6:1)
[debug/ast-final]     - declaration::Function %16 <linkage="private"> (foo.hlt:9:1)
[debug/ast-final]       - Function <cc="<standard>"> (foo.hlt:9:8)
[debug/ast-final]           | bar -> declaration::Parameter %7 <is_struct_param="false" kind="in">
[debug/ast-final]           | foo -> declaration::Parameter %6 <is_struct_param="false" kind="in">
[debug/ast-final]         - ID <name="foo"> (foo.hlt:9:16)
[debug/ast-final]         - type::Function <flavor="standard"> (foo.hlt:9:8) (non-const)
[debug/ast-final]           - type::function::Result (foo.hlt:9:9)
[debug/ast-final]             - type::String (foo.hlt:9:9) (non-const)
[debug/ast-final]           - declaration::Parameter %6 <is_struct_param="false" kind="in"> (foo.hlt:9:20)
[debug/ast-final]             - ID <name="foo"> (foo.hlt:9:25)
[debug/ast-final]             - type::ResolvedID <resolved="%14"> (type: Foo::Foo1) (foo.hlt:9:20) (non-const)
[debug/ast-final]               - ID <name="Foo::Foo1"> (foo.hlt:9:20)
[debug/ast-final]             - node::None (foo.hlt:9:20)
[debug/ast-final]           - declaration::Parameter %7 <is_struct_param="false" kind="in"> (foo.hlt:9:29)
[debug/ast-final]             - ID <name="bar"> (foo.hlt:9:40)
[debug/ast-final]             - type::ResolvedID <resolved="%10"> (type: Bar::Bar1) (foo.hlt:9:29) (non-const)
[debug/ast-final]               - ID <name="Bar::Bar1"> (foo.hlt:9:29)
[debug/ast-final]             - node::None (foo.hlt:9:20)
[debug/ast-final]         - node::None (foo.hlt:9:8)
[debug/ast-final]         - node::None (foo.hlt:6:1)
[debug/compiler]     validating module Bar
[debug/compiler]     validating module Foo
[debug/compiler]   updated cached AST for module Bar (final: yes, requires_compilation: no, dependencies: Foo)
[debug/compiler]   updated cached AST for module Foo (final: yes, requires_compilation: yes, dependencies: Bar)
[debug/compiler]   compiling module Foo to C++
[debug/compiler]     importing declarations from module Bar
[debug/compiler]     finalizing module Foo
// Begin of Foo (from "foo.hlt")
// Compiled by HILTI version X.X.X

#include <hilti/rt/compiler-setup.h>

#include <hilti/rt/libhilti.h>

namespace __hlt::Foo {
    extern void __register_module();
}

HILTI_PRE_INIT(__hlt::Foo::__register_module)

extern void __hlt::Foo::__register_module() { hilti::rt::detail::registerModule({ "Foo", nullptr, nullptr, nullptr}); }

/* __HILTI_LINKER_V1__
{"module":"Foo","namespace":"__hlt::Foo","path":"<...>/foo.hlt","version":1}
*/

