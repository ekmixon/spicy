### BTest baseline data generated by btest-diff. Do not edit. Use "btest -U/-u" to update. Requires BTest >= 0.63.
[debug/compiler] parsing file "<...>/types.hlt"
[debug/compiler] registering AST for module Foo ("<...>//types.hlt")
[debug/compiler]   Plugin HILTI
[debug/compiler]     processing AST, round 1
[debug/compiler]       performing missing imports for module Foo
[debug/compiler]         updated cached AST for module Foo (final: no, requires_compilation: yes, dependencies: (none))
[debug/compiler]       modules: Foo
[debug/compiler]       resetting nodes for module Foo
[debug/compiler]       building scopes for all modules
[debug/compiler]       resolving IDs in module Foo
[debug/compiler]       resolving operators in module Foo
[debug/compiler]       coercing expressions for Foo
[debug/ast-final] # Foo: Final AST
[debug/ast-final]   - Module %1 (types.hlt:5:1-10:2)
[debug/ast-final]       | Foo -> declaration::Module %2 <id="Foo">
[debug/ast-final]       | x1 -> declaration::GlobalVariable %3 <linkage="private">
[debug/ast-final]       | x2 -> declaration::GlobalVariable %4 <linkage="private">
[debug/ast-final]     - ID <name="Foo"> (types.hlt:5:8)
[debug/ast-final]     - statement::Block (types.hlt:5:1-10:2)
[debug/ast-final]     - declaration::GlobalVariable %3 <linkage="private"> (types.hlt:5:13-7:20)
[debug/ast-final]       - ID <name="x1"> (types.hlt:7:8)
[debug/ast-final]       - node::None (types.hlt:5:13-7:20)
[debug/ast-final]       - expression::Ctor (types.hlt:7:13) (non-const)
[debug/ast-final]         - ctor::Bytes <value="abc"> (types.hlt:7:13)
[debug/ast-final]     - declaration::GlobalVariable %4 <linkage="private"> (types.hlt:7:20-8:20)
[debug/ast-final]       - ID <name="x2"> (types.hlt:8:8)
[debug/ast-final]       - node::None (types.hlt:5:13-7:20)
[debug/ast-final]       - expression::Ctor (types.hlt:8:13) (const)
[debug/ast-final]         - ctor::Tuple (types.hlt:8:13)
[debug/ast-final]           - expression::Ctor (types.hlt:8:14) (const)
[debug/ast-final]             - ctor::UnsignedInteger <value="1" width="64"> (types.hlt:8:14)
[debug/ast-final]           - expression::Ctor (types.hlt:8:17) (const)
[debug/ast-final]             - ctor::UnsignedInteger <value="2" width="64"> (types.hlt:8:17)
[debug/compiler]     validating module Foo
[debug/compiler]   updated cached AST for module Foo (final: yes, requires_compilation: yes, dependencies: (none))
module Foo {

global auto x1 = b"abc";
global auto x2 = (1, 2);

}
